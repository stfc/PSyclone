#!/bin/bash
# -----------------------------------------------------------------------------
# BSD 3-Clause License
#
# Copyright (c) 2017, Science and Technology Facilities Council
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# Authors: R. Ford and A. R. Porter, STFC Daresbury Laboratory
# Modified: I. Kavcic, Met Office

# This is a simple bash script that executes all of the examples that
# are distributed with PSyclone. Note that PSyclone must be installed
# for this script to work - i.e. the 'psyclone' directory must be on
# your PYTHONPATH.

# abort if a command fails
set -e

# The location of the driver scripts for psyclone and the
# kernel-stub generator
export PSYCLONE=${PWD}/../bin/psyclone
export KSTUBGEN=${PWD}/../bin/genkernelstub

echo "Running examples dynamo/eg1"
cd dynamo/eg1
python runme.py
python runme_openmp.py
cd -

echo "Running examples dynamo/eg2"
cd dynamo/eg2
python runme.py
python runme_openmp.py
python runme_loop_fuse.py
cd -

echo "Running example dynamo/eg3"
cd dynamo/eg3
${PSYCLONE} solver_mod.x90
${PSYCLONE} -s ./colouring_and_omp.py -nodm solver_mod.x90
cd -

echo "Running example dynamo/eg4"
cd dynamo/eg4
${PSYCLONE} -nodm solver_mod.x90
${PSYCLONE} solver_mod.x90
cd -

echo "Running example dynamo/eg5"
cd dynamo/eg5
${PSYCLONE} alg.f90
cd -

echo "Running example dynamo/eg6"
cd dynamo/eg6
${PSYCLONE} -nodm alg.x90
${PSYCLONE} alg.x90
${PSYCLONE} -nodm -s ./omp_script.py alg.x90
${PSYCLONE} -s ./omp_script.py alg.x90
${PSYCLONE} -s ./omp_reprod_script.py alg.x90
cd -

echo "Running example dynamo/eg7"
cd dynamo/eg7
${PSYCLONE} alg.x90
cd -

echo "Running example dynamo/eg8"
cd dynamo/eg8
${PSYCLONE} helmholtz_solver_alg_mod.x90
${PSYCLONE} -s ./redundant_script.py helmholtz_solver_alg_mod.x90
cd -

echo "Running example dynamo/eg9"
cd dynamo/eg9
${PSYCLONE} advective_inc_alg_mod.x90
${PSYCLONE} -s ./colouring_and_omp.py -nodm advective_inc_alg_mod.x90
cd -

echo "Running gocean examples"
cd gocean
python runme.py
python runme_openmp.py
python runme_loop_fuse.py
cd -

echo "Running line-length examples"
cd line_length
python runme.py
cd -

echo "Running stub generation examples"
cd stub_generation
${KSTUBGEN} testkern_stencil_multi_mod.f90
cd -

echo "Running transformation examples"
cd transformations/inline
python module_inline_example.py
cd -

if hash F_Front 2>/dev/null; then
  echo "Running CLAW examples - will fail if CLAW not installed"
  cd transformations/claw
  # Since CLAW is not a pre-requisite we have to allow for the fact that
  # it might not be installed. We therefore use the bash idiom of 
  # "<cmd> || :" to ensure that each of the following lines returns true,
  # irrespective of whether <cmd> succeeds. This avoids triggering the
  # 'bail on error' that would otherwise happen because we do "set -e" at
  # the beginning of this script.
  python claw_trans_gocean.py || :
  python claw_trans_dynamo.py || :
  cd -
else
  echo "Omni Frontend not found - skipping CLAW examples"
fi

echo "All examples ran OK."
