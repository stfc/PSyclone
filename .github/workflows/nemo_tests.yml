# -----------------------------------------------------------------------------
# BSD 3-Clause License
#
# Copyright (c) 2023, Science and Technology Facilities Council.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# Author S. Siso, STFC Daresbury Lab

# This workflow will use a self-hosted runner to perform the more expensive
# integrations tests that are not run on GHA systems.

name: NEMO Integration Tests

on:
  push

jobs:
  run_if_on_mirror:
    if: ${{ github.repository == 'stfc/PSyclone-mirror' }}
    runs-on: self-hosted
    env:
        PERL5LIB: /home/aporter/perl5/lib/perl5
        PERL_LOCAL_LIB_ROOT: /home/aporter/perl5
        PERL_MB_OPT: "--install_base \"/home/aporter/perl5\""
        PERL_MM_OPT: "INSTALL_BASE=/home/aporter/perl5"

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        # This is required to get the commit history for merge commits for
        # the ci-skip check below.
        fetch-depth: '0'
    - name: Check for [skip ci] in commit message
      uses: mstachniuk/ci-skip@v1
      with:
        # This setting causes the tests to 'fail' if [skip ci] is specified
        fail-fast: true
        commit-filter: '[skip ci]'
    - name: Install dependencies
      run: |
        python -m venv .runner_venv
        . .runner_venv/bin/activate
        python -m pip install --upgrade pip
        # If you wish to install the version of fparser pointed to by the
        # submodule instead of the released version (from PyPI) then
        # uncomment the following line:
        pip install external/fparser
        pip install .[test]
        # Add Perl to the PATH
        echo "/home/aporter/perl5/bin" >> $GITHUB_PATH
        # Compile nvidia profiling tools
        module load nvidia-hpcsdk
        cd lib/profiling/nvidia/
        F90=nvfortran make

    # PSyclone, compile and run MetOffice NEMO with OpenMP for GPUs
    - name: NEMO MetOffice OpenMP for GPU
      run: |
        . .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export NEMO_DIR=${HOME}/NEMO
        cd examples/nemo/scripts
        make -j 4 openmp_gpu
        module load nvidia-hpcsdk netcdf_fortran
        make -j 4 compile-openmp_gpu
        export NV_ACC_POOL_THRESHOLD=75
        make run-openmp_gpu | tee output.txt
        # Check the output is as expected for the first 6 digits
        tail -n 1 output.txt | grep -q " it :      10"
        tail -n 1 output.txt | grep -q "|ssh|_max:  0.259483"
        tail -n 1 output.txt | grep -q "|U|_max:  0.458515"
        tail -n 1 output.txt | grep -q "S_min:  0.482686"
        tail -n 1 output.txt | grep -q "S_max:  0.407622"
        grep -A 1 "Elapsed Time" output.txt
        echo  $GITHUB_REF_NAME $GITHUB_SHA $(grep -A 1 "Elapsed Time" output.txt | head -n 2 | tail -n 1) >> ${NEMO_DIR}/performance_history_openmp_gpu

    # PSyclone, compile and run MetOffice NEMO with OpenACC kernels for GPUs
    - name: NEMO MetOffice OpenACC kernels for GPU
      run: |
        . .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export NEMO_DIR=${HOME}/NEMO
        cd examples/nemo/scripts
        make -j 4 openacc_kernels
        module load nvidia-hpcsdk netcdf_fortran
        COMPILER_ARCH=linux_nvidia_acc_gpu make -j 4 compile-openacc_kernels
        export NV_ACC_POOL_THRESHOLD=75
        make run-openacc_kernels | tee output.txt
        # Check the output is as expected for the first 6 digits
        tail -n 1 output.txt | grep -q " it :      10"
        tail -n 1 output.txt | grep -q "|ssh|_max:  0.259483"
        tail -n 1 output.txt | grep -q "|U|_max:  0.458515"
        tail -n 1 output.txt | grep -q "S_min:  0.482686"
        tail -n 1 output.txt | grep -q "S_max:  0.407622"
        grep -A 1 "Elapsed Time" output.txt
        echo  $GITHUB_REF_NAME $GITHUB_SHA $(grep -A 1 "Elapsed Time" output.txt | head -n 2 | tail -n 1) >> ${NEMO_DIR}/performance_history_openacc_kernels_gpu

    # PSyclone, compile and run ECMWF NEMO with OpenMP for CPUs
    - name: NEMO ECMWF OpenMP for CPU
      run: |
        . .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export NEMO_DIR=${HOME}/NEMOGCM_V40
        export COMPILER_ARCH=linux_intel
        export ADD_KEYS="IEEE_IS_NAN=ieee_is_nan key_nosignedzero"
        export DEL_KEYS="key_iomput"
        export MODEL_DIR=/archive/ssiso/ecmwf_eORCA1_GO8/
        export NAMELISTS_DIR=${NEMO_DIR}/testscripts_V40/output/openmp_outer_V40_eORCA1_GO8_Z75_20170906_cray_dp_1x1/
        cd examples/nemo/scripts
        make -j 4 openmp_cpu
        module load intel/oneapi compiler mpi
        export LD_LIBRARY_PATH=/home/ssiso/ecmwf_nemo/ESiWACE2/scripts/dev/netcdf-c-4.9.0/lib/:$LD_LIBRARY_PATH
        export LD_LIBRARY_PATH=/home/ssiso/ecmwf_nemo/ESiWACE2/scripts/dev/netcdf-fortran-4.5.4/lib:$LD_LIBRARY_PATH
        export LD_LIBRARY_PATH=/home/ssiso/ecmwf_nemo/ESiWACE2/scripts/dev/hdf5-1.12.2/lib/:$LD_LIBRARY_PATH
        make -j 4 compile-openmp_cpu
        export OMP_NUM_THREADS=4
        make run-openmp_cpu | tee output.txt
        # Check the output is as expected for the first 6 digits
        tail -n 1 output.txt | grep -q " it :      10"
        tail -n 1 output.txt | grep -q "|ssh|_max:  0.199714"
        tail -n 1 output.txt | grep -q "|U|_max:  0.148409"
        tail -n 1 output.txt | grep -q "S_min:  0.108530"
        tail -n 1 output.txt | grep -q "S_max:  0.404045"
        grep -A 1 "Elapsed Time" output.txt
        echo  $GITHUB_REF_NAME $GITHUB_SHA $(grep -A 1 "Elapsed Time" output.txt | head -n 2 | tail -n 1) >> ${NEMO_DIR}/performance_history_openmp_cpu
