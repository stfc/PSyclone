# -----------------------------------------------------------------------------
# BSD 3-Clause License
#
# Copyright (c) 2024-2025, Science and Technology Facilities Council.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# Author S. Siso, STFC Daresbury Lab

# This workflow will use a self-hosted runner to perform the more expensive
# NEMOv5 integrations tests that are not run on GHA systems.

name: NEMOv5 Integration Tests

on:
  push

jobs:
  run_if_on_mirror:
    if: ${{ github.repository == 'stfc/PSyclone-mirror' }}
    runs-on: self-hosted
    env:
      NEMODIR_NAME: NEMOv5_Jan25
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        # This is required to get the commit history for merge commits for
        # the ci-skip check below.
        fetch-depth: '0'
    - name: Check for [skip ci] in commit message
      uses: mstachniuk/ci-skip@v1
      with:
        # This setting causes the tests to 'fail' if [skip ci] is specified
        fail-fast: true
        commit-filter: '[skip ci]'
    - name: Install dependencies
      run: |
        module load python/${PYTHON_VERSION}
        python -m venv .runner_venv
        source .runner_venv/bin/activate
        python -m pip install --upgrade pip
        # Uncomment the below to use the submodule version of fparser rather
        # than the latest release from pypi.
        # pip install external/fparser
        pip install .

    # PSyclone passthrough for 5.0-beta of NEMO.
    - name: NEMO 5.0 gfortran passthrough
      # Only bother doing passthrough if this is a re-run of a previous test.
      if: ${{ github.run_attempt != '1' }}
      run: |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack unload && spack load nemo-build-environment%gcc@14
        source .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export PSYCLONE_HOME=${PWD}/.runner_venv
        export NEMO_DIR=${HOME}/${NEMODIR_NAME}
        export TEST_DIR=BENCH_PASSTHROUGH_GCC

        # Set up FCM: PATHs are loaded from SPACK, we only need to set the FCFLAGS
        cd $NEMO_DIR
        cp $PSYCLONE_NEMO_DIR/KGOs/arch-linux_spack.fcm arch/arch-linux_spack.fcm
        export FCFLAGS="-fdefault-real-8 -O2 -fcray-pointer -ffree-line-length-none -g"

        # Clean up and compile
        rm -rf tests/${TEST_DIR}
        ./makenemo -r BENCH -m linux_spack -n ${TEST_DIR} -p ${PSYCLONE_NEMO_DIR}/passthrough.py \
            add_key "key_nosignedzero" -j 4 -v 1

        # Run test
        cd $NEMO_DIR/tests/${TEST_DIR}/EXP00
        cp $PSYCLONE_NEMO_DIR/KGOs/namelist_cfg_bench_small namelist_cfg
        mpirun -np 4 ./nemo
        tail run.stat
        # This was produced with gfortran, so we can do an exact diff
        diff $PSYCLONE_NEMO_DIR/KGOs/run.stat.bench.gfortran.small.10steps run.stat

    - name: NEMO 5.0 nvidia passthrough
      # Only bother doing passthrough if this is a re-run of a previous test.
      if: ${{ github.run_attempt != '1' }}
      run: |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack unload && spack load nemo-build-environment%nvhpc@24.5
        source .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export PSYCLONE_HOME=${PWD}/.runner_venv
        export NEMO_DIR=${HOME}/${NEMODIR_NAME}
        export TEST_DIR=BENCH_PASSTHROUGH_NVHPC
        
        # Set up FCM: PATHs are loaded from SPACK, we only need to set the FCFLAGS
        cd $NEMO_DIR
        cp $PSYCLONE_NEMO_DIR/KGOs/arch-linux_spack.fcm arch/arch-linux_spack.fcm
        export FCFLAGS="-i4 -Mr8 -O2 -nofma -Mnovect -g"
        
        # Clean up and compile
        # Without key_mpi_off it fails to compile (even without psyclone)
        rm -rf tests/${TEST_DIR}
        ./makenemo -r BENCH -m linux_spack -n ${TEST_DIR} -p ${PSYCLONE_NEMO_DIR}/passthrough.py \
          add_key "key_mpi_off key_nosignedzero" -j 4 -v 1

        # Run test
        cd $NEMO_DIR/tests/${TEST_DIR}/EXP00
        cp $PSYCLONE_NEMO_DIR/KGOs/namelist_cfg_bench_small namelist_cfg
        ./nemo
        tail run.stat
        diff $PSYCLONE_NEMO_DIR/KGOs/run.stat.bench.nvhpc.small.10steps run.stat
        export VAR_TIME=$(awk '/ step /{print $3}' timing.output | head -n 1 | sed -e 's/s//')
        echo "Time-stepping duration = " $VAR_TIME

    - name: NEMO 5.0 Intel passthrough
      # Only bother doing passthrough if this is a re-run of a previous test.
      if: ${{ github.run_attempt != '1' }}
      run: |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack unload && spack load nemo-build-environment%oneapi
        source .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export PSYCLONE_HOME=${PWD}/.runner_venv
        export NEMO_DIR=${HOME}/${NEMODIR_NAME}
        export TEST_DIR=BENCH_PASSTHROUGH_ONEAPI

        # Set up FCM: PATHs are loaded from SPACK, we only need to set the FCFLAGS
        cd $NEMO_DIR
        cp $PSYCLONE_NEMO_DIR/KGOs/arch-linux_spack.fcm arch/arch-linux_spack.fcm
        export FCFLAGS="-i4 -r8 -O2 -fp-model precise -fno-alias -g"

        # Clean up and compile
        rm -rf tests/${TEST_DIR}
        ./makenemo -r BENCH -m linux_spack -n ${TEST_DIR} -p ${PSYCLONE_NEMO_DIR}/passthrough.py \
          add_key "key_nosignedzero" -j 4 -v 1

        # Run test
        cd $NEMO_DIR/tests/${TEST_DIR}/EXP00
        cp $PSYCLONE_NEMO_DIR/KGOs/namelist_cfg_bench_small namelist_cfg
        mpirun -np 6 ./nemo
        tail run.stat
        diff $PSYCLONE_NEMO_DIR/KGOs/run.stat.bench.oneapi.small.10steps run.stat

    - name: NEMO 5.0 gfortran OpenMP for CPUs
      run: |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack unload && spack load nemo-build-environment%gcc@14
        source .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export PSYCLONE_HOME=${PWD}/.runner_venv
        export NEMO_DIR=${HOME}/${NEMODIR_NAME}
        export TEST_DIR=BENCH_OMP_THREADING_GCC

        # Set up FCM: PATHs are loaded from SPACK, we only need to set the FCFLAGS
        cd $NEMO_DIR
        cp $PSYCLONE_NEMO_DIR/KGOs/arch-linux_spack.fcm arch/arch-linux_spack.fcm
        export FCFLAGS="-fdefault-real-8 -O2 -fcray-pointer -ffree-line-length-none -g -fopenmp"

        # Clean up and compile
        rm -rf tests/${TEST_DIR}
        ./makenemo -r BENCH -m linux_spack -n ${TEST_DIR} -p ${PSYCLONE_NEMO_DIR}/omp_cpu_trans.py \
          add_key "key_nosignedzero" -j 4 -v 1

        # Run test
        cd $NEMO_DIR/tests/${TEST_DIR}/EXP00
        cp $PSYCLONE_NEMO_DIR/KGOs/namelist_cfg_bench_small namelist_cfg
        OMP_NUM_THREADS=4 mpirun -np 1 ./nemo
        tail run.stat
        diff $PSYCLONE_NEMO_DIR/KGOs/run.stat.bench.gfortran.small.10steps run.stat
        export TIME_sec=$(grep "local proces" timing.output | head -n 1 | awk '{print $4}' | tr -d s)
        ${HOME}/mongosh-2.1.1-linux-x64/bin/mongosh \
          "mongodb+srv://cluster0.x8ncpxi.mongodb.net/PerformanceMonitoring" \
          --quiet --apiVersion 1 --username ${{ secrets.MONGODB_USERNAME }} \
          --password ${{ secrets.MONGODB_PASSWORD }} \
          --eval 'db.GitHub_CI.insertOne({branch_name: "'"$GITHUB_REF_NAME"'", commit: "'"$GITHUB_SHA"'",
          github_job: "'"$GITHUB_RUN_ID"'"-"'"$GITHUB_RUN_ATTEMPT"'",
          ci_test: "NEMOv5 OpenMP for CPU", nemo_version: "NEMOv5", system: "GlaDos",
          compiler:"gfortran-14" , date: new Date(), elapsed_time: '"${TIME_sec}"'})'

    - name: NEMO 5.0 nvidia OpenMP for GPUs (BENCH - managed memory)
      run: |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack unload && spack load nemo-build-environment%nvhpc@24.5
        source .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export PSYCLONE_HOME=${PWD}/.runner_venv
        export NEMO_DIR=${HOME}/${NEMODIR_NAME}
        export TEST_DIR=BENCH_OMP_OFFLOAD_NVHPC

        # Set up FCM: PATHs are loaded from SPACK, we only need to set the FCFLAGS
        # We compile with "-O2 -Mnofma -Mnovect -gpu=math_uniform" to permit comparison of the results.
        cd $NEMO_DIR
        cp $PSYCLONE_NEMO_DIR/KGOs/arch-linux_spack.fcm arch/arch-linux_spack.fcm
        export FCFLAGS="-i4 -Mr8 -O2 -Mnofma -Mnovect -g -mp=gpu -gpu=mem:managed,math_uniform"

        # Clean up and compile
        # Without key_mpi_off it fails to compile (even without psyclone)
        rm -rf tests/${TEST_DIR}
        ./makenemo -r BENCH -m linux_spack -n ${TEST_DIR} -p ${PSYCLONE_NEMO_DIR}/omp_gpu_trans.py \
          add_key "key_mpi_off key_nosignedzero" -j 4 -v 1

        # Run test
        cd $NEMO_DIR/tests/${TEST_DIR}/EXP00
        cp $PSYCLONE_NEMO_DIR/KGOs/namelist_cfg_bench_small namelist_cfg
        ./nemo
        # tail run.stat
        diff $PSYCLONE_NEMO_DIR/KGOs/run.stat.bench.nvhpc.small.10steps run.stat
        export TIME_sec=$(grep "local proces" timing.output | head -n 1 | awk '{print $4}' | tr -d s)
        ${HOME}/mongosh-2.1.1-linux-x64/bin/mongosh \
          "mongodb+srv://cluster0.x8ncpxi.mongodb.net/PerformanceMonitoring" \
          --quiet --apiVersion 1 --username ${{ secrets.MONGODB_USERNAME }} \
          --password ${{ secrets.MONGODB_PASSWORD }} \
          --eval 'db.GitHub_CI.insertOne({branch_name: "'"$GITHUB_REF_NAME"'", commit: "'"$GITHUB_SHA"'",
          github_job: "'"$GITHUB_RUN_ID"'"-"'"$GITHUB_RUN_ATTEMPT"'",
          ci_test: "NEMOv5 OpenMP for GPU (BENCH)", nemo_version: "NEMOv5", system: "GlaDos",
          compiler:"nvhpc-24.5" , date: new Date(), elapsed_time: '"${TIME_sec}"'})'

    - name: NEMO 5.0 nvidia OpenMP for GPUs (UKMO ORCA1 - managed memory)
      run: |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack unload && spack load nemo-build-environment%nvhpc@24.5
        source .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export PSYCLONE_HOME=${PWD}/.runner_venv
        export NEMO_DIR=${HOME}/${NEMODIR_NAME}
        export TEST_DIR=ORCA1_OMP_OFFLOAD_NVHPC

        # Set up FCM: PATHs are loaded from SPACK, we only need to set the FCFLAGS
        # We compile at "-O2 -Mnofma -Mnovect -gpu=math_uniform" to permit comparison of the results.
        cd $NEMO_DIR
        cp $PSYCLONE_NEMO_DIR/KGOs/arch-linux_spack.fcm arch/arch-linux_spack.fcm
        export FCFLAGS="-i4 -Mr8 -O2 -Mnofma -Mnovect -g -mp=gpu -gpu=mem:managed,math_uniform"

        # Clean up and compile
        # Without key_mpi_off it fails to compile (even without psyclone)
        rm -rf cfgs/${TEST_DIR}
        ./makenemo -r GOSI10p0.0_like_eORCA1 -m linux_spack -n ${TEST_DIR} -p ${PSYCLONE_NEMO_DIR}/omp_gpu_trans.py \
          add_key "key_mpi_off key_nosignedzero" -j 4 -v 1

        # Run test
        cd $NEMO_DIR/cfgs/${TEST_DIR}/EXP00
        ln -sf /archive/NEMO_INPUTS/NEMOv5_MO_original_files/ancil/eORCA1/link/* .
        ./nemo
        diff $PSYCLONE_NEMO_DIR/KGOs/run.stat.orca1.nvhpc.10steps run.stat
        export TIME_sec=$(grep "local proces" timing.output | head -n 1 | awk '{print $4}' | tr -d s)
        ${HOME}/mongosh-2.1.1-linux-x64/bin/mongosh \
          "mongodb+srv://cluster0.x8ncpxi.mongodb.net/PerformanceMonitoring" \
          --quiet --apiVersion 1 --username ${{ secrets.MONGODB_USERNAME }} \
          --password ${{ secrets.MONGODB_PASSWORD }} \
          --eval 'db.GitHub_CI.insertOne({branch_name: "'"$GITHUB_REF_NAME"'", commit: "'"$GITHUB_SHA"'",
          github_job: "'"$GITHUB_RUN_ID"'"-"'"$GITHUB_RUN_ATTEMPT"'",
          ci_test: "NEMOv5 OpenMP for GPU (ORCA1)", nemo_version: "NEMOv5", system: "GlaDos",
          compiler:"nvhpc-24.5" , date: new Date(), elapsed_time: '"${TIME_sec}"'})'

    - name: NEMO 5.0 nvidia OpenMP for GPUs (UKMO ORCA2 - managed memory)
      run: |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack unload && spack load nemo-build-environment%nvhpc@24.5
        source .runner_venv/bin/activate
        export PSYCLONE_NEMO_DIR=${GITHUB_WORKSPACE}/examples/nemo/scripts
        export PSYCLONE_HOME=${PWD}/.runner_venv
        export NEMO_DIR=${HOME}/${NEMODIR_NAME}
        export TEST_DIR=ORCA2_OMP_OFFLOAD_NVHPC

        # Set up FCM: PATHs are loaded from SPACK, we only need to set the FCFLAGS
        # We compile at "-O2 -Mnofma -Mnovect -gpu=math_uniform" to permit comparison of the results.
        cd $NEMO_DIR
        cp $PSYCLONE_NEMO_DIR/KGOs/arch-linux_spack.fcm arch/arch-linux_spack.fcm
        export FCFLAGS="-i4 -Mr8 -O2 -Mnofma -Mnovect -g -mp=gpu -gpu=mem:managed,math_uniform"

        # Clean up and compile
        # Without key_mpi_off it fails to compile (even without psyclone)
        rm -rf cfgs/${TEST_DIR}
        ./makenemo -r ORCA2_ICE_PISCES -m linux_spack -n ${TEST_DIR} -p ${PSYCLONE_NEMO_DIR}/omp_gpu_trans.py \
          add_key "key_mpi_off key_nosignedzero" -j 4 -v 1

        # Run test
        cd $NEMO_DIR/cfgs/${TEST_DIR}/EXP00
        ln -sf ../../../ORCA2_ICE_v4.2.0/* .
        ./nemo
        diff $PSYCLONE_NEMO_DIR/KGOs/run.stat.orca2.nvhpc.10steps run.stat
        export TIME_sec=$(grep "local proces" timing.output | head -n 1 | awk '{print $4}' | tr -d s)
        ${HOME}/mongosh-2.1.1-linux-x64/bin/mongosh \
          "mongodb+srv://cluster0.x8ncpxi.mongodb.net/PerformanceMonitoring" \
          --quiet --apiVersion 1 --username ${{ secrets.MONGODB_USERNAME }} \
          --password ${{ secrets.MONGODB_PASSWORD }} \
          --eval 'db.GitHub_CI.insertOne({branch_name: "'"$GITHUB_REF_NAME"'", commit: "'"$GITHUB_SHA"'",
          github_job: "'"$GITHUB_RUN_ID"'"-"'"$GITHUB_RUN_ATTEMPT"'",
          ci_test: "NEMOv5 OpenMP for GPU (ORCA2)", nemo_version: "NEMOv5", system: "GlaDos",
          compiler:"nvhpc-24.5" , date: new Date(), elapsed_time: '"${TIME_sec}"'})'
