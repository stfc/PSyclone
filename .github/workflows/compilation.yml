# -----------------------------------------------------------------------------
# BSD 3-Clause License
#
# Copyright (c) 2020-2025, Science and Technology Facilities Council.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# Author A. R. Porter, STFC Daresbury Lab
# Modified by R. W. Ford, STFC Daresbury Lab
# Modified by A. J. Voysey, Met Office
# Modified by J. Henrichs, Bureau of Meteorology
# Modified by N. Nobre, STFC Daresbury Lab

# This workflow will use a self-hosted runner to perform the more expensive
# compilation tests that are not run on GHA systems. At the moment it:
#
#  * Runs the test suite with compilation with gfortran and nvfortran;
#  * Builds the examples with gfortran and nvfortran (the latter with
#    OpenACC enabled).
#  * Builds the tutorials with gfortran and nvfortran.

name: Compilation tests

on:
  push

env:
  CUDA_VERSION: 12.8.0
  GFORTRAN_VERSION: 14.2.0
  HDF5_VERSION: 1.14.5
  NETCDF_C_VERSION: 4.9.2
  NETCDF_FORTRAN_VERSION: 4.6.1
  NVFORTRAN_VERSION: 25.1
  OPENMPI_VERSION: 5.0.6
  PYTHON_VERSION: 3.13.2

jobs:
  run_if_on_mirror:
    # Only PSyclone-mirror has the necessary self-hosted runner.
    if: ${{ github.repository == 'stfc/PSyclone-mirror' }}
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        # This is required to get the commit history for merge commits for
        # the ci-skip check below.
        fetch-depth: '0'
    - name: Check for [skip ci] in commit message
      uses: mstachniuk/ci-skip@v1
      with:
        # This setting causes the tests to 'fail' if [skip ci] is specified
        fail-fast: true
        commit-filter: '[skip ci]'
    - name: Install dependencies
      run: |
        module load python/${PYTHON_VERSION}
        python -m venv .runner_venv
        . .runner_venv/bin/activate
        python -m pip install --upgrade pip
        # Uncomment the below to use the submodule version of fparser rather
        # than the latest release from pypi.
        # pip install external/fparser
        pip install .[test,psydata]
    - name: Unit tests with compilation - gfortran
      run: |
        . .runner_venv/bin/activate
        module load gcc/${GFORTRAN_VERSION} openmpi/${OPENMPI_VERSION}
        module load hdf5/${HDF5_VERSION} netcdf_c/${NETCDF_C_VERSION} netcdf_fortran/${NETCDF_FORTRAN_VERSION}
        pytest -n 4 --f90=gfortran --f90flags="-ffree-line-length-none" --compile --compileopencl src/psyclone/tests
    - name: Unit tests with compilation - nvfortran
      run: |
        . .runner_venv/bin/activate
        module load nvidia-hpcsdk/${NVFORTRAN_VERSION}
        module load hdf5/${HDF5_VERSION} netcdf_c/${NETCDF_C_VERSION} netcdf_fortran/${NETCDF_FORTRAN_VERSION}
        pytest -n 4 --f90=nvfortran --compile --compileopencl src/psyclone/tests
    - name: Examples with compilation - gfortran
      run: |
        . .runner_venv/bin/activate
        make -C examples allclean
        # Although we're using gfortran, we link with CUDA's OpenCL library
        module load gcc/${GFORTRAN_VERSION} openmpi/${OPENMPI_VERSION}
        module load hdf5/${HDF5_VERSION} netcdf_c/${NETCDF_C_VERSION} netcdf_fortran/${NETCDF_FORTRAN_VERSION}
        module load cuda/${CUDA_VERSION}
        F90=gfortran make -C examples compile
    - name: Tutorials with compilation - gfortran
      run: |
        . .runner_venv/bin/activate
        make -C tutorial/practicals allclean
        module load gcc/${GFORTRAN_VERSION} openmpi/${OPENMPI_VERSION}
        module load hdf5/${HDF5_VERSION} netcdf_c/${NETCDF_C_VERSION} netcdf_fortran/${NETCDF_FORTRAN_VERSION}
        make -C tutorial/practicals compile
    - name: Examples with compilation - nvfortran
      run: |
        . .runner_venv/bin/activate
        make -C examples allclean
        module load nvidia-hpcsdk/${NVFORTRAN_VERSION}
        module load hdf5/${HDF5_VERSION} netcdf_c/${NETCDF_C_VERSION} netcdf_fortran/${NETCDF_FORTRAN_VERSION}
        F90=nvfortran F90FLAGS="-acc -Minfo=all" make -C examples compile
    - name: Tutorials with compilation - nvfortran
      run: |
        . .runner_venv/bin/activate
        make -C tutorial/practicals allclean
        module load nvidia-hpcsdk/${NVFORTRAN_VERSION}
        module load hdf5/${HDF5_VERSION} netcdf_c/${NETCDF_C_VERSION} netcdf_fortran/${NETCDF_FORTRAN_VERSION}
        F90=nvfortran F90FLAGS="-acc -Minfo=all" make -C tutorial/practicals/LFRic compile
        F90=nvfortran F90FLAGS="-acc -Minfo=all -Mnofma -O2" make -C tutorial/practicals/generic run
        make -C tutorial/practicals/generic/4_openacc acc_test
