# -----------------------------------------------------------------------------
# BSD 3-Clause License
#
# Copyright (c) 2017-2024, Science and Technology Facilities Council
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# Author: A. R. Porter, STFC Daresbury Laboratory
# Modified by: R. W. Ford, STFC Daresbury Laboratory
#              J. Henrichs, Bureau of Meteorology,
#              I. Kavcic and O. Brunt, Met Office

# This is the PSyclone configuration file for the "overlapping comms"
# tutorial section and has been modified for the tutorial.

# Settings common to all APIs
[DEFAULT]
DISTRIBUTED_MEMORY = true
REPRODUCIBLE_REDUCTIONS = false
# Amount to pad the local summation array when REPRODUCIBLE_REDUCTIONS is true
REPROD_PAD_SIZE = 8
PSYIR_ROOT_NAME = psyir_tmp
VALID_PSY_DATA_PREFIXES = profile, extract, read_only_verify, nan_test

# Specify number of OpenCL devices per node. When combining OpenCL with MPI,
# the mpirun/mpiexec ranks_per_node parameter must match this number.
OCL_DEVICES_PER_NODE = 1

# Symbols imported from the following modules will be ignored when parsing
# and will not produce a warning message if they cannot be found
IGNORE_MODULES = netcdf, mpi

# Settings specific to the LFRic (Dynamo 0.3) API
# ===============================================
[lfric]
access_mapping = gh_read: read, gh_write: write, gh_readwrite: readwrite,
                 gh_inc: inc, gh_readinc: readinc, gh_sum: sum

# Specify whether we compute annexed dofs when a kernel is written so
# that it iterates over dofs. This is currently only the case for
# builtins. If annexed dofs are computed then in certain cases we
# remove the need for a halo exchange call.
COMPUTE_ANNEXED_DOFS = true

# Specify supported Fortran datatypes
supported_fortran_datatypes = real, integer, logical

# Specify default kind (precision) for the supported LFRic data types
default_kind = real: r_def, integer: i_def, logical: l_def

# Specify number of bytes for the supported LFRic data types.
# The values for 'r_tran', 'r_solver', 'r_def', 'r_bl' and 'r_phys' are
# set according to CPP ifdefs. The values given below are the defaults.
# 'l_def' is included in this dict so that it contains a complete
# record of the various precision symbols used in LFRic.
precision_map = i_def: 4,
                l_def: 1,
                r_def: 8,
                r_double: 8,
                r_ncdf: 8,
                r_quad: 16,
                r_second: 8,
                r_single: 4,
                r_solver: 4,
                r_tran: 8,
                r_bl: 8,
                r_phys: 8,
                r_um: 8

# Specify whether we generate code to perform runtime correctness checks
RUN_TIME_CHECKS = false

# Number of ANY_SPACE and ANY_DISCONTINUOUS_SPACE function spaces
NUM_ANY_SPACE = 10
NUM_ANY_DISCONTINUOUS_SPACE = 10

# Settings specific to the Gocean 1.0 API
# =======================================
[gocean]
access_mapping = go_read: read, go_write: write, go_readwrite: readwrite

# The detail for grid properties. There are four entries:
# 1) The name used in a kernel declaration.
# 2) The string required to dereference the property from the field.
#    A {0} is replaced with the name of the field variable
# 3) The type of the property: must be 'scalar' or 'array'.
# 4) The intrinsic type of the property: must be 'integer' or 'real'.
# The following values are used by PSyclone, and are therefore required:
# go_grid_xstop, go_grid_ystop, 
# go_grid_{internal,whole}_{inner,outer}_{start,stop}
# Details about the grid properties and their usage can be found in the
# PSyclone documentation at:
# https://psyclone.readthedocs.io/en/stable/gocean1p0.html#argument-metadata-meta-args
grid-properties = go_grid_xstop: {0}%%grid%%subdomain%%internal%%xstop: scalar: integer,
                  go_grid_ystop: {0}%%grid%%subdomain%%internal%%ystop: scalar: integer,
                  go_grid_data: {0}%%data: array: real,
                  go_grid_internal_inner_stop: {0}%%internal%%xstop: scalar: integer,
                  go_grid_internal_outer_stop: {0}%%internal%%ystop: scalar: integer,
                  go_grid_whole_inner_stop: {0}%%whole%%xstop: scalar: integer,
                  go_grid_whole_outer_stop: {0}%%whole%%ystop: scalar: integer,
                  go_grid_internal_inner_start: {0}%%internal%%xstart: scalar: integer,
                  go_grid_internal_outer_start: {0}%%internal%%ystart: scalar: integer,
                  go_grid_whole_inner_start: {0}%%whole%%xstart: scalar: integer,
                  go_grid_whole_outer_start: {0}%%whole%%ystart: scalar: integer,
                  go_grid_area_t: {0}%%grid%%area_t: array: real,
                  go_grid_area_u: {0}%%grid%%area_u: array: real,
                  go_grid_area_v: {0}%%grid%%area_v: array: real,
                  go_grid_mask_t: {0}%%grid%%tmask: array: integer,
                  go_grid_dx_t: {0}%%grid%%dx_t: array: real,
                  go_grid_dx_u: {0}%%grid%%dx_u: array: real,
                  go_grid_dx_v: {0}%%grid%%dx_v: array: real,
                  go_grid_dy_t: {0}%%grid%%dy_t: array: real,
                  go_grid_dy_u: {0}%%grid%%dy_u: array: real,
                  go_grid_dy_v: {0}%%grid%%dy_v: array: real,
                  go_grid_lat_u: {0}%%grid%%gphiu: array: real,
                  go_grid_lat_v: {0}%%grid%%gphiv: array: real,
                  go_grid_dx_const: {0}%%grid%%dx: scalar: real,
                  go_grid_dy_const: {0}%%grid%%dy: scalar: real,
                  go_grid_nx: {0}%%grid%%nx: scalar: integer,
                  go_grid_ny: {0}%%grid%%ny: scalar: integer,
                  go_grid_x_min_index: {0}%%grid%%subdomain%%internal%%xstart: scalar: integer,
                  go_grid_x_max_index: {0}%%grid%%subdomain%%internal%%xstop: scalar: integer,
                  go_grid_y_min_index: {0}%%grid%%subdomain%%internal%%ystart: scalar: integer,
                  go_grid_y_max_index: {0}%%grid%%subdomain%%internal%%ystop: scalar: integer

# Specify whether we generate additional debug code
DEBUG_MODE = false
